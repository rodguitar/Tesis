Version=4.3
IconFile=
NumberOfModules=2
Module1=Charts
Module2=DBApp
Build1=Default,b4a.example
DoNotOverwriteManifest=False
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="4" android:targetSdkVersion="14"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
NumberOfFiles=2
File1=layout1.bal
File2=layoutBusca.bal
NumberOfLibraries=8
Library1=core
Library2=gesturedetector
Library3=sql
Library4=dialogs
Library5=phone
Library6=audiorecorder
Library7=tts
Library8=gps
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Experiencia 5
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: true
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim FontSize = 12 As Float
	Dim MaxVal, MinVal, ScaleMin, ScaleMax, ScaleInterval As Double
	Dim Mi_acelerometro As PhoneAccelerometer
	Dim RelojAcelerometro As Timer
	Dim AR As AudioRecorder
	Dim MP As MediaPlayer
	Dim VR As VoiceRecognition
	Dim TTS1 As TTS
	Dim GPS1 As GPS
	'Type Ingreso (Titulo As String, Nota As Double, Tipo As String) 
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.

	Dim GD As GestureDetector
	Dim pnlPie As Panel
	Dim TabHost1 As TabHost
	
	Dim ImageView1 As ImageView
	Dim legend As Bitmap
	
	Private SpinnerNota As Spinner
	Private ListViewNotas As ListView
	
	Private EditTextTitulo As EditText

	Private SpinnerTipo As Spinner
	
	Dim Mi_Cursor As Cursor' cursor para almacenar y recorrer una respuesta de un SELECT
	Dim Mi_CursorBusca As Cursor
	Private EditTextBusca As EditText
	Private ListViewResultados As ListView
	
	Dim PAUSA As Boolean
	Dim comentario_texto As String
	Dim nombre_voz As String
	Private ButtonStop As Button
	Dim IdTexto As InputDialog
	
	Dim Latitud_Actual As Double
	Dim Longitud_Actual As Double
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	If FirstTime=True Then 
		DBApp.CreaBD
		AR.Initialize()
		
		VR.Initialize("VR")
		TTS1.Initialize("TTS1")
		GPS1.Initialize("GPS")
	End If
	VR.Prompt = "Habla ahora!"
	
	GD.SetOnGestureListener(Activity, "Gesture")
	
	TabHost1.Initialize("TabHost1")
	
	'Activity.LoadLayout("Layout1")
	Activity.AddView(TabHost1, 0, 0, 100%x, 100%y)
	TabHost1.AddTab("Ingreso de Reseñas","Layout1")
	Activity.Title="Desafío 1"
	
	LLenaSpinnerNota
	SpinnerTipo.Add("Solo Título")
	SpinnerTipo.Add("Texto")
	SpinnerTipo.Add("Voz")
	
	LLenaListview
	
	TabGraficoPie
	addValorGrafico(CalculaEstadistica)
	TabBuscar
	
	Mi_acelerometro.StartListening("Sensor")
	RelojAcelerometro.Initialize("Intervalo",100)
	RelojAcelerometro.Enabled=True
	MP.Initialize 'Inicializa el media player
End Sub

Sub Activity_Resume
	Mi_acelerometro.StartListening("Sensor")
	RelojAcelerometro.Enabled=True
	
	If GPS1.GPSEnabled = False Then
		ToastMessageShow("Please enable the GPS device.", True)
		StartActivity(GPS1.LocationSettingsIntent) 'Will open the relevant settings screen.
	Else
		GPS1.Start(0, 0) 'Listen to GPS with no filters.
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
	Mi_acelerometro.StopListening
	RelojAcelerometro.Enabled=False
	GPS1.Stop
End Sub

Sub TabGraficoPie
	Dim p As Panel
	p.Initialize("")
	pnlPie.Initialize("pnlPie")
	p.AddView(pnlPie, 0, 0, 100%x, 100%y - 100dip)
	TabHost1.AddTab2("Resumen", p)
	
End Sub

Sub TabBuscar
	TabHost1.AddTab("Buscador","layoutBusca")
End Sub

Sub addValorGrafico(datos As Map)
	'Add the items. The last parameter is the color. Passing 0 will make it a random color.
	Dim PD As PieData 
	PD.Initialize
	PD.Target = pnlPie 'Set the target view
	
	For Each k As String In datos.Keys
		Charts.AddPieItem(PD, k, datos.Get(k), 0)
	Next
	
	PD.GapDegrees = 0 'Total size of gaps between slices. Set to 0 for no gaps.
	PD.LegendBackColor = Colors.ARGB(150, 100, 100, 100) 'The background color of the legend bitmap.
	
	'This call draws the pie.
	'PD - The pie data
	'Colors.Gray - The view's background color
	'True - Create a legend bitmap.
	legend = Charts.DrawPie(PD, Colors.Gray, True)
	
	If ImageView1.IsInitialized=False Then ImageView1.Initialize("")
	ImageView1.RemoveView
	ImageView1.SetBackgroundImage(legend)
	
	pnlPie.AddView(ImageView1, 10dip, 10dip, legend.Width, legend.Height)
End Sub

Sub CalculaEstadistica As Map

	Dim Mapa As Map
	Dim sumaST As Int
	Dim sumaT As Int
	Dim sumaV As Int
	
	If Mi_Cursor.RowCount>0 Then
		
		For i=0 To Mi_Cursor.RowCount-1
			
			Mi_Cursor.Position=i
			
			Select Mi_Cursor.GetString("tipo")
			
				Case "Solo Título" 
					sumaST=sumaST+1 
				
				Case "Texto" 
					sumaT=sumaT+1
				
				Case "Voz"
					sumaV=sumaV+1
				
				
			End Select
		Next
		
	End If
		
	If Mapa.IsInitialized=False Then Mapa.Initialize
	Mapa.Put("Solo Título",sumaST)
	Mapa.Put("Texto",sumaT)
	Mapa.Put("Voz",sumaV)

	sumaST = 0
	sumaT = 0
	sumaV = 0
	
	Return Mapa
End Sub

Sub LLenaSpinnerNota
	Dim I As Double=7.0 
	Do While I>=1.0
		SpinnerNota.add(Round2(I,1))
		I=I-0.1
	Loop
End Sub

Sub LLenaListview
	'Cursor que contiene todos los datos de la tabla
	Mi_Cursor=DBApp.Mi_BD.ExecQuery("SELECT id_review, titulo, nota, tipo FROM REVIEW")

	ListViewNotas.Clear
	EditTextTitulo.Text=""
	
	If Mi_Cursor.RowCount>0 Then
	
		For i=0 To Mi_Cursor.RowCount-1
		
			Mi_Cursor.Position=i
			ListViewNotas.AddTwoLines(Mi_Cursor.GetString("id_review"),Mi_Cursor.GetString("titulo") & " ("&Mi_Cursor.GetString("nota")&", "& Mi_Cursor.GetString("tipo") &")")
		
		Next
	
	End If
	
End Sub

Sub ButtonIngresar_Click

	
	If EditTextTitulo.Text.Trim="" Then
		Msgbox("Falta ingresar el Título","Error")
	Else
		
		'Insercion de los datos en la tabla de reseñas REVIEW de la BD.
		DBApp.InsertaReview(EditTextTitulo.Text,SpinnerNota.SelectedItem,SpinnerTipo.SelectedItem,comentario_texto,nombre_voz,Latitud_Actual,Longitud_Actual)
		
		LLenaListview
		
		addValorGrafico(CalculaEstadistica)
		
		Msgbox("Has ingresado tu Reseña correctamente","Exito")
	End If
	
End Sub

Sub Gesture_onFling(velocityX As Float, velocityY As Float, MotionEvent1 As Object, MotionEvent2 As Object)
	Log("   onFling velocityX = " & velocityX & ", velocityY = " & velocityY & ", ev1 = " & MotionEvent1 & ", ev2 = " & MotionEvent2)
	If velocityX<0 Then
		TabHost1.CurrentTab=(TabHost1.CurrentTab+1) Mod TabHost1.TabCount
	Else
		If TabHost1.CurrentTab=0 Then 
			TabHost1.CurrentTab=TabHost1.TabCount-1
		Else
			TabHost1.CurrentTab=(TabHost1.CurrentTab-1) Mod TabHost1.TabCount
		End If
	
	End If
	
End Sub

Sub EditTextBusca_TextChanged (Old As String, New As String)

	Mi_CursorBusca=DBApp.Mi_BD.ExecQuery("SELECT id_review, titulo, nota, tipo FROM REVIEW WHERE titulo LIKE '"& New &"%' ")

	ListViewResultados.Clear

	If Mi_CursorBusca.RowCount>0 Then

		For i=0 To Mi_CursorBusca.RowCount-1
	
			Mi_CursorBusca.Position=i
			ListViewResultados.AddTwoLines(Mi_CursorBusca.GetString("id_review"),Mi_CursorBusca.GetString("titulo") & " ("&Mi_CursorBusca.GetString("nota")&", "& Mi_CursorBusca.GetString("tipo") &")")
	
		Next

	End If
	
End Sub
Sub ListViewResultados_ItemLongClick (Position As Int, Value As Object)

	Dim mensaje As Int
    mensaje = Msgbox2("Opciones","","Editar","Cancelar","Eliminar",Null)
    Select mensaje
    	Case DialogResponse.POSITIVE 
			Log("Se pulsó Editar")
			
			InputDialogTitulo(ListViewResultados.GetItem(Position))
			LLenaListview
		Case DialogResponse.NEGATIVE
			DBApp.EliminaReview(ListViewResultados.GetItem(Position))
			ListViewResultados.Clear
			LLenaListview
			addValorGrafico(CalculaEstadistica)
		Case DialogResponse.CANCEL
			Log("Se pulsó Cancelar")
			
    End Select
	

End Sub

Sub InputDialogTitulo(posicion As Int)
	Dim Id As InputDialog
    Id.Hint = "Escribe Aquí"
    Id.HintColor = Colors.ARGB(196, 255, 140, 0)
	
    Dim ret As Int = Id.Show("Escribe el Título Nuevo", "Edita Título", "Cambiar", "Cancelar","", Null)
	
	If ret = -1 Then
		DBApp.EditaReview(Id.Input,posicion)
    	'ToastMessageShow("Has pulsado: Cambiar", False)    
    End If

    If ret = -3 Then 
    'Cancelar
    End If
End Sub

Sub InputDialogTexto
	
    IdTexto.Hint = "Escribe Aquí"
    IdTexto.HintColor = Colors.ARGB(196, 255, 140, 0)
	
    Dim ret As Int = IdTexto.Show("Escribe un Comentario o ingrésalo mediante Reconocimiento de Voz", "Comentario", "Aceptar", "Cancelar","Rec. de Voz", Null)
	
	If ret = -1 Then
		comentario_texto=IdTexto.Input
       	nombre_voz=""
		IdTexto.Input=""
    End If
	
	If ret =-2 Then
		VR.Listen
		
	End If

    If ret = -3 Then 
		comentario_texto=""
		SpinnerTipo.SelectedIndex=0
    'Cancelar
    End If
End Sub

Sub VR_Result (Success As Boolean, Texts As List)
	If Success = True Then
		
		IdTexto.Input=Texts.Get(0)
		InputDialogTexto
		
	End If
End Sub

Sub InputDialogVoz
	Dim Id As InputDialog
    Id.Hint = "Escribe Aquí"
    Id.HintColor = Colors.ARGB(196, 255, 140, 0)
	
    Dim ret As Int = Id.Show("Ingresa un nombre y presiona Aceptar para comenzar a grabar", "Audio Voz", "Aceptar", "Cancelar","", Null)
	
	If ret = -1 Then
		If Id.Input="" Then
			InputDialogVoz
		Else
			nombre_voz=Id.Input&".wav"
			comentario_texto=""
	    	IniciarGrabacion
			ButtonStop.Enabled=True
		End If
    End If

    If ret = -3 Then 
		nombre_voz=""
		SpinnerTipo.SelectedIndex=0
    'Cancelar
    End If
End Sub

Sub Sensor_AccelerometerChanged (X As Float, Y As Float, Z As Float)

	If PAUSA= True Then	
		If X>12 OR X<-12 Then 
			TabHost1.CurrentTab=(TabHost1.CurrentTab+1) Mod TabHost1.TabCount
			'ToastMessageShow("X= "&X,False)
			RelojAcelerometro.Interval=800
		Else 
			If Y>12 OR Y<-12 Then
				TabHost1.CurrentTab=(TabHost1.CurrentTab+1) Mod TabHost1.TabCount
				'ToastMessageShow("Y= "&Y,False)
				RelojAcelerometro.Interval=800
			Else
				If Z>12 OR Z<-12 Then 
					TabHost1.CurrentTab=(TabHost1.CurrentTab+1) Mod TabHost1.TabCount
					'ToastMessageShow("Z= "&Z,False)
					RelojAcelerometro.Interval=800
				End If
				
			End If
		End If
	End If
	PAUSA=False
End Sub

Sub Intervalo_Tick
	PAUSA=True
	RelojAcelerometro.Interval=100
End Sub

Sub SpinnerTipo_ItemClick (Position As Int, Value As Object)

	Select SpinnerTipo.GetItem(Position)
	
		Case "Texto"
			InputDialogTexto
		Case "Voz"
			InputDialogVoz
	End Select

End Sub

Sub IniciarGrabacion
	AR.AudioSource = AR.AS_MIC
	AR.OutputFormat = AR.OF_THREE_GPP
	AR.AudioEncoder = AR.AE_AMR_NB
	AR.setOutputFile(File.DirDefaultExternal,nombre_voz)
	AR.prepare()

	ToastMessageShow("Grabando... Pulse el boton rojo para DETENER",True)
	AR.Start
End Sub

Sub ButtonStop_Click
	ToastMessageShow("Grabación detenida.",False)
	AR.Stop
	ButtonStop.Enabled=False
End Sub

Sub ListViewNotas_ItemLongClick (Position As Int, Value As Object)
		Dim TipoReseña As String
		TipoReseña=DBApp.Mi_BD.ExecQuerySingleResult("SELECT tipo FROM REVIEW WHERE id_review='"&ListViewNotas.GetItem(Position)&"'")
	
		If TipoReseña= "Texto" Then
			'Despliega y reproduce el Comentario de texto de la reseña
			Dim Comentario As String
			Comentario=DBApp.Mi_BD.ExecQuerySingleResult("SELECT comentario_texto FROM REVIEW WHERE id_review='"&ListViewNotas.GetItem(Position)&"'")
			TTS1.Speak(Comentario, True)
			Msgbox2(Comentario,"Comentario de la Reseña","Regresar","","",Null)
			
		End If
		
		If TipoReseña= "Voz" Then
			'Reproduce o Detiene el comentario de Voz de la reseña
			If MP.IsPlaying Then
				MP.stop
				ToastMessageShow("Audio de voz detenido.",True)
			Else
				Dim nombreArchivo As String
				nombreArchivo= DBApp.Mi_BD.ExecQuerySingleResult("SELECT nombre_voz FROM REVIEW WHERE id_review='"&ListViewNotas.GetItem(Position)&"'")
				MP.Load(File.DirDefaultExternal,nombreArchivo)
				MP.play
				ToastMessageShow("Reproduciendo comentario de Voz...",True)
			End If
		End If
End Sub

'Evento que se gatilla al cambiar pestañas
Sub TabHost1_TabChanged
	If TabHost1.CurrentTab=0 Then
		LLenaListview
	End If
	
	If TabHost1.CurrentTab=2 Then
		EditTextBusca.Text=""
		
	End If
	
End Sub

Sub GPS_LocationChanged (Location1 As Location)
	Latitud_Actual = Location1.Latitude
	Longitud_Actual = Location1.Longitude
	
End Sub
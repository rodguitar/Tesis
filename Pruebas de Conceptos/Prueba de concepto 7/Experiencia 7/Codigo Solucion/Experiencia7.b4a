Version=4.3
IconFile=
NumberOfModules=0
Build1=Default,b4a.example
DoNotOverwriteManifest=False
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="5" android:targetSdkVersion="14"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~SetApplicationAttribute(android:theme, "@android:style/Theme.Holo")~\n~'End of default text.~\n~
NumberOfFiles=1
File1=Layout1.bal
NumberOfLibraries=3
Library1=core
Library2=ioio
Library3=ioiolib
@EndOfDesignText@
#Region  Project Attributes 
	'Experiencia 7: IOIO-Potenciometro-LED RGB - Fotoresistor
	#ApplicationLabel: Experiencia 7
	#VersionCode: 1
	#VersionName: 
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: true
	#IncludeTitle: false
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim YOYO As IOIO
	Dim Timer_Fotoresistor As Timer
	Dim SPI As SpiMaster
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Dim wBuffer(2) As Byte
	Dim pin39_fotoresistor As AnalogInput
	Private LabelValorAnalogo As Label
	Dim ValorAnalogoFotoR As Float
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	Activity.LoadLayout("Layout1")
	IOIOConnect
	configuracionSPI_pot
	Timer_Fotoresistor.Initialize("LoopFotoresistor",100)
	Timer_Fotoresistor.Enabled=True
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)
	If UserClosed Then
		IOIOClose
		ExitApplication
	End If
End Sub

Sub IOIOConnect
	Try
		YOYO.Initialize
		YOYO.WaitForConnect
		pin39_fotoresistor= YOYO.OpenAnalogInput(39)
		
	Catch
		Log("YOYO Exception: "& LastException.Message)
	End Try
End Sub

Sub IOIOClose
	Try
		pin39_fotoresistor.Close
		SPI.Close
		YOYO.Disconnect
		YOYO.WaitForDisconnect	
	Catch
		Log("YOYO Close Exception: "& LastException.Message)
	End Try	
End Sub

Sub configuracionSPI_pot
	Dim slavepins() As Int

	slavepins = Array As Int(7)
	Dim slavemodes() As Object

	slavemodes = Array As Object( SPI.OP_NORMAL)
	SPI=YOYO.OpenSpiMaster(9, SPI.IP_PULL_UP, 3, SPI.OP_NORMAL, 6, SPI.OP_NORMAL, slavepins, slavemodes, SPI.RATE_1M, False, False)
	
End Sub

Sub LoopFotoresistor_Tick
	ValorAnalogoFotoR=pin39_fotoresistor.Read
	wBuffer(0)=0x00 
	wBuffer(1)=NumberFormat(-128*ValorAnalogoFotoR+128,1,0) ' Se utilizó ecuacion de la recta entre 2 puntos 
	
	LabelValorAnalogo.Text = ValorAnalogoFotoR
	SPI.WriteRead(0,wBuffer,wBuffer.Length,2,Null,0)
End Sub